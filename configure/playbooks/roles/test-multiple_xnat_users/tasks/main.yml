---
- name: "Download project data if we do not have a local copy"
  delegate_to: localhost
  block:
    - name: "Download project data"
      ansible.builtin.include_tasks: ./roles/setup_xnat_project/tasks/download_data.yml

- name: "Set up XNAT users and their projects"
  ansible.builtin.include_tasks: setup_single_testuser.yml
  loop: "{{ range(1, n_users | int + 1) | list }}"
  loop_control:
    loop_var: user_id
  vars:
    xnat_web_url: "{{ xnat_web_server.url }}"
    admin_username: "{{ xnat_service_admin.username }}"
    admin_password: "{{ xnat_service_admin.password }}"
    ssl_certs: "{{ ssl.validate_certs }}"
    user_name: "{{ 'testuser%02x' | format(user_id) }}"
    user_password: "{{ 'carlos1602%02x' | format(user_id) }}"
    user_firstname: "testuser"
    user_lastname: "{{ '%02x' | format(user_id) }}"
    user_email: "{{ user_name }}@ibash.org"
    project_id: "ibash-{{ '%02x' | format(user_id) }}"
    project_name: "Test project for {{ user_name }}"
    project_data_dir: "../../data"
    project_data: "{{ project_data_dir }}/ibash"
    project_xml_file: "{{ project_data_dir }}/{{ project_id }}_project.xml"
    project_metadata: "{{ project_data }}/{{ project_id }}-sessions.csv"
    netrc_file: "{{ project_data_dir }}/.netrc-{{ user_name }}"

- name: "Upload data for each user - concurrently"
  delegate_to: localhost
  poll: 0
  async: 10800  # allow up to 3 hours for this task to complete  necessary when uploading large data
  ansible.builtin.command:
    python ../scripts/upload_data.py --metadata {{ project_metadata }} --data {{ project_data }} \
      --inventory ../hosts.yml --host xnat_web --netrc {{ netrc_file }}
  register: upload_data
  changed_when: upload_data.failed != false
  loop: "{{ range(1, n_users | int + 1) | list }}"
  loop_control:
    loop_var: user_id
  vars:
    user_name: "{{ 'testuser%02x' | format(user_id) }}"
    project_id: "ibash-{{ '%02x' | format(user_id) }}"
    project_data_dir: "../../data"
    project_data: "{{ project_data_dir }}/ibash"
    project_metadata: "{{ project_data }}/{{ project_id }}-sessions.csv"
    netrc_file: "{{ project_data_dir }}/.netrc-{{ user_name }}"

- name: "Check upload data status"
  delegate_to: localhost
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  loop: "{{ upload_data.results }}"
  register: upload_data_status
  until: upload_data_status.finished
  retries: 180
  delay: 5

- name: "Print upload data stdout"
  ansible.builtin.debug:
    msg: "{{ item.stdout_lines }}"
  loop: "{{ upload_data_status.results }}"
  when: item.stdout != ""
