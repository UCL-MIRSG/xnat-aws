---
- name: Ensure docker client cert dir exists on server
  ansible.builtin.file:
    path: "{{ docker.client_cert_dir }}"
    state: directory
    owner: "{{ docker.owner }}"
    group: "{{ docker.group }}"
    mode: 0700

- name: Generate OpenSSL client private key
  community.crypto.openssl_privatekey:
    path: "{{ docker.client_cert_dir }}/key.pem"
    owner: "{{ docker.owner }}"
    group: "{{ docker.group }}"
    mode: 0400

- name: Generate OpenSSL CSR for each client using private key
  community.crypto.openssl_csr:
    path: "{{ docker.client_cert_dir }}/{{ item }}.csr"
    privatekey_path: "{{ docker.client_cert_dir }}/key.pem"
    common_name: "{{ item }}"
  register: new_docker_client_csr_generated
  loop: "{{ clients }}"

- name: Generate client certificates signed by server CA
  community.crypto.x509_certificate:
    path: "{{ docker.client_cert_dir }}/{{ item }}.cert"
    csr_path: "{{ docker.client_cert_dir }}/{{ item }}.csr"
    provider: ownca
    ownca_path: "{{ docker.ca_cert }}"
    ownca_privatekey_path: "{{ docker.ca_key }}"
    mode: 0400
    owner: "{{ docker.owner }}"
    group: "{{ docker.group }}"
  loop: "{{ clients }}"

- name: Copy signed client certificates to temp dir on Ansible controller
  ansible.builtin.fetch:
    src: "{{ docker.client_cert_dir }}/{{ item }}.cert"
    dest: "{{ xnat_container_service_temp_files_cert_dir }}/{{ item }}.cert"
    flat: true
  loop: "{{ clients }}"

- name: Copy private key to temp dir on Ansible controller
  ansible.builtin.fetch:
    src: "{{ docker.client_cert_dir }}/key.pem"
    dest: "{{ xnat_container_service_temp_files_cert_dir }}/key.pem"
    flat: true
