# General AWS
aws_region         = "eu-west-2"
availability_zones = ["eu-west-2a", "eu-west-2b"]

# CIDR blocks
vpc_cidr_block = "192.168.0.0/16" # 192.168.0.0 to 	192.168.255.255
subnet_cidr_blocks = {
  "public"   = ["192.168.56.0/24"] #Â 192.168.56.0 to 192.168.56.255
  "private"  = ["192.168.100.0/24", "192.168.101.0/24"]
}

# EC2 private IPs
instance_private_ips = {
  "xnat_web"   = "192.168.56.10"
  "xnat_cserv" = "192.168.56.14"
}
smtp_private_ip = "192.168.56.101"

# CIDR blocks to add to whitelist (in addition to your own IP)
extend_ssh_cidr   = []
extend_http_cidr  = []
extend_https_cidr = []

# EC2 instance types
ec2_instance_types = {
  "xnat_web"   = "t3.large"    # XNAT needs more RAM than available in t2.micro
  "xnat_db"    = "db.t3.medium" # XNAT needs more RAM than available in t2.micro
  "xnat_cserv" = "m4.xlarge"
}

# EC2 root block device volume size
root_block_device_size = 30

# EC2 instance OS - this will be used to determine:
# - which AMI to use
# - the user Ansible will use to log into the instance (ansible_ssh_user)
instance_os = "rocky9"

# AppStream
as2_image_name           = "IDEAS-FSL-AmazonLinux2-EFSMount-2023-08-31"
as2_instance_type        = "stream.standard.medium"
as2_desired_instance_num = 1

# Scheduler
schedule_expression = "cron(0 0 18 * * *)"
